using namespace System;
using namespace System::Runtime::InteropServices;

#define DEBUG_OUT Console::WriteLine

ref struct MyPInvokeWrap {
public:
	enum class SystemMetricIndex {
		// Same values as those defined in winuser.h.
		SM_CXSCREEN = 0,
		SM_CYSCREEN = 1
	};
	
	[DllImport("user32")]
	static int GetSystemMetrics(int);

	[DllImport("NCMVDLL")]
	static void print_line([MarshalAs(UnmanagedType::LPStr)]String^);
};

[DllImport("NCMVDLL")]
extern "C" int ConvertStringToInt(const char *s);

[StructLayout(LayoutKind::Sequential, Pack=8)]
value struct Position
{
	int x;
	int y;
};

[DllImport("NCMVDLL")]
extern "C" double CalDistance(Position a, Position b);

[STAThread] int main()
{
	DEBUG_OUT(MyPInvokeWrap::GetSystemMetrics((int)MyPInvokeWrap::SystemMetricIndex::SM_CXSCREEN));
	DEBUG_OUT(MyPInvokeWrap::GetSystemMetrics((int)MyPInvokeWrap::SystemMetricIndex::SM_CYSCREEN));
	
	MyPInvokeWrap::print_line("NCMV TEST");
	
	int n = ConvertStringToInt("12345");
	DEBUG_OUT(n);
	
	Position a, b;
	a.x = 0, a.y = 0;
	b.x = 1, b.y = 1;
	double d = CalDistance(a, b);
	DEBUG_OUT(d);
	
	return 0;
}